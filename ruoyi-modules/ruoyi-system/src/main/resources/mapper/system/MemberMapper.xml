<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.MemberMapper">
    
    <resultMap type="Member" id="MemberResult">
        <result property="uid"    column="uid"    />
        <result property="username"    column="username"    />
        <result property="password"    column="password"    />
        <result property="idcard"    column="idcard"    />
        <result property="name"    column="name"    />
        <result property="sex"    column="sex"    />
        <result property="age"    column="age"    />
        <result property="phone"    column="phone"    />
        <result property="email"    column="email"    />
        <result property="order"    column="order"    />
    </resultMap>

    <sql id="selectMemberVo">
        select uid, username, password, idcard, name, sex, age, phone, email, order from member
    </sql>

    <select id="selectMemberList" parameterType="Member" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        <where>  
            <if test="uid != null  and uid != ''"> and uid = #{uid}</if>
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="password != null  and password != ''"> and password = #{password}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="sex != null  and sex != ''"> and sex = #{sex}</if>
            <if test="age != null "> and age = #{age}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="email != null  and email != ''"> and email = #{email}</if>
            <if test="order != null  and order != ''"> and order = #{order}</if>
        </where>
    </select>
    
    <select id="selectMemberByIdcard" parameterType="String" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        where idcard = #{idcard}
    </select>
        
    <insert id="insertMember" parameterType="Member">
        insert into member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uid != null">uid,</if>
            <if test="username != null">username,</if>
            <if test="password != null">password,</if>
            <if test="idcard != null">idcard,</if>
            <if test="name != null">name,</if>
            <if test="sex != null">sex,</if>
            <if test="age != null">age,</if>
            <if test="phone != null">phone,</if>
            <if test="email != null">email,</if>
            <if test="order != null">order,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uid != null">#{uid},</if>
            <if test="username != null">#{username},</if>
            <if test="password != null">#{password},</if>
            <if test="idcard != null">#{idcard},</if>
            <if test="name != null">#{name},</if>
            <if test="sex != null">#{sex},</if>
            <if test="age != null">#{age},</if>
            <if test="phone != null">#{phone},</if>
            <if test="email != null">#{email},</if>
            <if test="order != null">#{order},</if>
         </trim>
    </insert>

    <update id="updateMember" parameterType="Member">
        update member
        <trim prefix="SET" suffixOverrides=",">
            <if test="uid != null">uid = #{uid},</if>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="name != null">name = #{name},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="age != null">age = #{age},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="order != null">order = #{order},</if>
        </trim>
        where idcard = #{idcard}
    </update>

    <delete id="deleteMemberByIdcard" parameterType="String">
        delete from member where idcard = #{idcard}
    </delete>

    <delete id="deleteMemberByIdcards" parameterType="String">
        delete from member where idcard in 
        <foreach item="idcard" collection="array" open="(" separator="," close=")">
            #{idcard}
        </foreach>
    </delete>
</mapper>